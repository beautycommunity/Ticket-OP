@using Ticket_OP.Models
@using PagedList
@using PagedList.Mvc
@model IEnumerable<Ticket_OP.Models.Ticket>

@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
    IPagedList list = Model as IPagedList;
}

<div class="row">

    <div class="col-md-6">
        <h2>Home Ticket @ViewBag.BRAND </h2>

        @if (ViewBag.Pos == "1")
        {
            <a href="@Url.Action("CreateTicket",new { Pos = ViewBag.Pos })" class="btn btn-primary" align="left"><span class="glyphicon glyphicon-plus"></span>เปิดงานใหม่</a>
        }


    </div>
    <br />
    <div class="col-md-6" align="right">

        <section id="searchText">
            <div class="well">
                @using (Html.BeginForm("Index", "TicketOP"))
                {
                    @*@Html.DropDownList("NName", "ผู้รับงาน")*@

                    @Html.DropDownList("Type", "ประเภทงาน")

                    <input type="search" name="seach" value="@ViewBag.WordSearch" />
                    <button type="submit" class="btn btn-default">ค้นหา <span class="glyphicon glyphicon-search"></span></button>
                }
            </div>

        </section>

    </div>

</div>
<hr />

<style>
    hr {
        display: block;
        height: 1px;
        border: 0;
        border-top: 1px solid #ccc;
        margin: 1em 0;
        padding: 0;
    }

    .rating-stars {
        font-size: 1.5em;
        color: #E3E3E3;
        margin-bottom: .5em;
    }

        .rating-stars .active {
            color: #737373;
        }
</style>
<link rel="stylesheet" type="text/css" href="https://netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css">
<script type="text/javascript">
    function myFunction() {
        var melement = document.getElementById('group');
        melement.style.color = "lightblue";

    }
</script>


@if (Model != null && Model.Count() > 0)
{
    @Html.PagedListPager(list, n => Url.Action("Index", new { page = n, seach = ViewBag.WordSearch, type = ViewBag.typeSearch, Pos = ViewBag.Pos }))

    foreach (var _item in Model)
    {

        <div id="group" class="well well-lg">

            <div class="row">

                <div class="col-md-4">
                    @Html.LabelFor(m => _item.TICKETNO, new { @class = "col-md control-label" })
                    @Html.DisplayFor(m => _item.TICKETNO, new { @class = "form-control" })

                </div>

                <div class="col-md-3">
                    @Html.LabelFor(m => _item.ST_NAME, new { @class = "col-md control-label" })

                    @switch (_item.SS_ID)
                    {
                        case 1:
                            <span style="color:#0099ff">@Html.DisplayFor(m => _item.ST_NAME, new { @class = "form-control" })</span>
                            break;
                        case 2:
                            <span style="color:#bd0f15">@Html.DisplayFor(m => _item.ST_NAME, new { @class = "form-control" })</span>
                            break;
                        case 3:
                            <span style="color:#00cc00">@Html.DisplayFor(m => _item.ST_NAME, new { @class = "form-control" })</span>
                            break;
                        default:
                            @Html.DisplayFor(m => _item.ST_NAME, new { @class = "form-control" })
                            break;
                    }
                </div>

                <div class="col-md-2">
                    @if (_item.REC_NICKNAME != null)
                    {
                        @Html.LabelFor(m => _item.REC_NICKNAME, new { @class = "col-md control-label" })

                        switch (_item.SS_ID)
                        {
                            case 1:
                                <span style="color:#0099ff">@Html.DisplayFor(m => _item.REC_NICKNAME, new { @class = "form-control" })</span>
                                break;
                            case 2:
                                <span style="color:#bd0f15">@Html.DisplayFor(m => _item.REC_NICKNAME, new { @class = "form-control" })</span>
                                break;
                            case 3:
                                <span style="color:#00cc00">@Html.DisplayFor(m => _item.REC_NICKNAME, new { @class = "form-control" })</span>
                                break;
                            default:
                                @Html.DisplayFor(m => _item.REC_NICKNAME, new { @class = "form-control" })
                                break;
                        }
                    }
                </div>

            </div>
            <hr />

            <section id=m.TICKETNO>

                <div class="row">

                    <div class="col-md-4" style="word-wrap:break-word;">
                        @Html.LabelFor(m => _item.DETAIL, new { @class = "col-md control-label" })
                        <br />
                        @Html.DisplayFor(m => _item.DETAIL, new { @class = "form-control" })
                    </div>

                    @*<div class="col-md-2">

            @Html.LabelFor(m => _item.WHCODE, new { @class = "col-md control-label" })
            <br />
            @Html.DisplayFor(m => _item.WHCODE, new { @class = "form-control" })

        </div>*@

                    <div class="col-md-1">

                        @Html.LabelFor(m => _item.WHNAME, new { @class = "col-md control-label" })
                        <br />
                        @Html.DisplayFor(m => _item.WHNAME, new { @class = "form-control" })

                    </div>

                    <div class="col-md-1">
                        @Html.LabelFor(m => _item.AREA, new { @class = "col-md control-label" })
                        <br />
                        @Html.DisplayFor(m => _item.AREA, new { @class = "form-control" })
                    </div>
                    <div class="col-md-1">

                    </div>
                    <div class="col-md-1">

                        @Html.LabelFor(m => _item.CREATEDATE, new { @class = "col-md control-label" })
                        <br />
                        @Html.DisplayFor(m => _item.CREATEDATE, new { @class = "form-control" })

                    </div>
                    <div class="col-md-1">

                        @Html.LabelFor(m => _item.CREATETIME, new { @class = "col-md control-label" })
                        <br />
                        @Html.DisplayFor(m => _item.CREATETIME, new { @class = "form-control" })

                    </div>



                    <div class="col-md-1">

                    </div>
                    <div class="col-md-1">
                        <br />
                        <input type="button" value="รายละเอียด" id=_item.TICKETNO class="btn btn-primary" onclick="location.href='@Url.Action("TicketDetail", "TicketOP",new { TicketId = _item.TK_ID, Pos = @ViewBag.Pos })'" />
                    </div>
                    <div class="col-md-1">
                        <br />
                        @*@if (_item.SS_ID < 2 && ViewBag.UserDepId == 13)
            {
                <input type="button" value="รับงาน" id=_item.TICKETNO class="btn btn-success" onclick="location.href='@Url.Action("TicketReceive", "Ticket",new { TicketId = _item.TK_ID })'" />
            }*@
                    </div>
                </div>

            </section>

        </div>
    }

    @Html.PagedListPager(list, n => Url.Action("Home", new { page = n, seach = ViewBag.WordSearch, type = ViewBag.typeSearch, Pos = ViewBag.Pos }))
}
else
{
    <div class="row">
        <div class="col-lg-12">
            <h4>ไม่พบ ข้อมูลการแจ้ง Ticket IT</h4>
        </div>
    </div>

}



